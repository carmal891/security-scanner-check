name: CI/CD Security measures
run-name: ${{ github.actor }} is testing CI/CD Security measures
on: [pull_request]

# The API requires write permission on the repository to submit dependencies
permissions:
  contents: write
  pull-requests: write


# Environment variables to configure Go and Go modules. Customize as necessary
env:
  GOPROXY: '' # A Go Proxy server to be used
  GOPRIVATE: '' # A list of modules are considered private and not requested from GOPROXY

jobs:
  initial-setup-job:
    runs-on: ubuntu-latest
    steps:
      - run: echo " The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      #Checkout repo
      - name: Check out repository code
        uses: actions/checkout@v4
      #install go
      - name: Install Go  
        uses: actions/setup-go@v3
        with:
          go-version: ">=1.18.0"
  Secret-Scanning-Job:
      needs: initial-setup-job
      runs-on: ubuntu-latest
      steps:     
      - name: Secret Scanning Review Action
        uses: advanced-security/secret-scanning-review-action@v0
        with:
          token: ${{ secrets.SECRET_SCAN_REVIEW_GITHUB_TOKEN }}
          fail-on-alert: true
          fail-on-alert-exclude-closed: false
          patterns-path: .patterns

  Dependency-Review-Job:
      needs: initial-setup-job
      runs-on: ubuntu-latest
      steps:
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          warn-only: false
          comment-summary-in-pr: always
  CodeQL-Scanning-Job:
      needs: initial-setup-job
      runs-on: ubuntu-latest
      strategy:
        fail-fast: true
        matrix:
          language: [ 'go'  ]
      permissions:
        security-events: write
        actions: read
        contents: read
        pull-requests: write
      steps:
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"


 

    